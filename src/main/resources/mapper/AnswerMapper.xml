<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.qiyoung.answer.mapper.AnswerMapper">
    <resultMap id="BaseResultMap" type="top.qiyoung.answer.model.Answer">
        <id column="answer_id" jdbcType="INTEGER" property="answerId"/>
        <result column="exercise_id" jdbcType="INTEGER" property="exerciseId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="answer" jdbcType="VARCHAR" property="answer"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <insert id="add" parameterType="top.qiyoung.answer.model.Answer">
        insert into answer (exercise_id, user_id, answer, create_time) values (#{exerciseId},#{userId},#{answer},#{createTime})
    </insert>

    <select id="countAnswerByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) from answer
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="findAnswerByUserId" resultMap="BaseResultMap">
        select * from answer
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        order by create_time desc
        <if test="pageSize != null and currentPage != null">
          limit #{currentPage},#{pageSize}
        </if>
    </select>

    <select id="findAnswerByAnswerId" resultMap="BaseResultMap">
        select * from answer
        <where>
            <if test="answerId != null">
                and answer_id = #{answerId}
            </if>
        </where>
    </select>

    <update id="update" parameterType="top.qiyoung.answer.model.Answer">
        update answer
        <set>
            <if test="answer != null and answer != ''">
                answer = #{answer},
            </if>
            <if test="createTime != null">
                create_time = #{createTime}
            </if>
        </set>
        <where>
            <if test="exerciseId != null">
                and exercise_id = #{exerciseId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </update>

    <select id="findExerciseIdByUserId" resultType="java.lang.Integer">
        select distinct exercise_id from answer
        <where>
            <if test="userId != null">
              user_id = #{userId}
            </if>
            and exercise_id in ( select exercise_id from exercise
            <where>
                <if test="subjectId != null">
                    and subject_id = #{subjectId}
                </if>
                <if test="search != null">
                    and exercise_title like "%"#{search}"%"
                </if>
            </where>);
        </where>
    </select>

    <select id="findWrongAnswerByUserIdAndExerciseId" resultMap="BaseResultMap">
        select * from answer
         <where>
             answer.answer != (select correct from exercise
                 <where>
                     <if test="exerciseId != null">
                         and exercise.exercise_id = #{exerciseId}
                     </if>
                 </where>)
             <if test=" exerciseId != null">
                and answer.exercise_id = ${exerciseId}
             </if>
             <if test="userId != null">
                 and answer.user_id = #{userId}
             </if>
         </where>
        order by create_time desc limit 1
    </select>

    <select id="findAnswerByExerciseIdAndUserId" resultMap="BaseResultMap">
        select * from answer
        <where>
            <if test=" exerciseId != null">
                and answer.exercise_id = ${exerciseId}
            </if>
            <if test="userId != null">
                and answer.user_id = #{userId}
            </if>
        </where>
        order by create_time desc limit 1
    </select>

    <delete id="deleteByExerciseId" parameterType="java.lang.Integer">
        delete from answer
        <where>
            <if test="exerciseId != null">
                and exercise_id = #{exerciseId}
            </if>
        </where>
    </delete>
    <delete id="deleteByUserId" parameterType="java.lang.Integer">
        delete from answer
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </delete>
</mapper>