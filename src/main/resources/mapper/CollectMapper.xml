<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.qiyoung.answer.mapper.CollectMapper">
    <resultMap id="BaseResultMap" type="top.qiyoung.answer.model.Collect">
        <id column="collect_id" jdbcType="INTEGER" property="collectId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="exercise_id" jdbcType="INTEGER" property="exerciseId"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="findCollectByExerciseIdAndUserId" resultMap="BaseResultMap">
        select * from collect
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="exerciseId != null">
                and exercise_id =#{exerciseId}
            </if>
        </where>
    </select>

    <insert id="addCollect" parameterType="top.qiyoung.answer.model.Collect">
        insert into collect(user_id, exercise_id,create_time) VALUES (#{userId},#{exerciseId},#{createTime})
    </insert>

    <delete id="deleteCollect" parameterType="java.lang.Integer">
        delete from collect
        <where>
            <if test="exerciseId != null">
                and exercise_id = #{exerciseId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </delete>
    <delete id="deleteCollectByExerciseId" parameterType="java.lang.Integer">
        delete from collect
        <where>
            <if test="exerciseId != null">
                and exercise_id = #{exerciseId}
            </if>
        </where>
    </delete>
    <delete id="deleteByUserId" parameterType="java.lang.Integer">
        delete from collect
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </delete>

    <select id="findCollectByUserId" resultMap="BaseResultMap">
        select * from collect
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
        </where>
        order by create_time
        <if test="index != null and size != null">
            limit #{index},#{size}
        </if>
    </select>

    <select id="countCollectByUserId" resultType="java.lang.Integer">
        select count(1) from collect
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
        </where>
    </select>
</mapper>